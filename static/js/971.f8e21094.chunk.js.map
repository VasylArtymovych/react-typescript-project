{"version":3,"file":"static/js/971.f8e21094.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.ts","components/MoviesList/ListItem/ListItem.styled.ts","components/MoviesList/ListItem/ListItem.tsx","components/MoviesList/MoviesList.tsx","components/Pagination/Pagination.styled.ts","components/Pagination/Pagination.tsx","components/SearchForm/SearchForm.styled.ts","components/SearchForm/SearchForm.tsx","pages/MoviesPage/MoviesPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled(\"ul\")`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: minmax(300px, auto);\n  grid-gap: 20px;\n  list-style: none;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n","import styled from \"styled-components\";\nimport { TbMovie } from \"react-icons/tb\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Item = styled(\"li\")`\n  padding: ${(p) => p.theme.space[2]}px;\n  border-radius: ${({ theme }) => theme.radii.normal};\n\n  background: ${({ theme }) => theme.colors.background};\n  box-shadow: rgba(255, 111, 80, 0.25) 0px 54px 55px,\n    rgba(255, 111, 80, 0.12) 0px -12px 30px,\n    rgba(255, 111, 80, 0.12) 0px 4px 6px, rgba(255, 111, 80, 0.17) 0px 12px 13px,\n    rgba(255, 111, 80, 0.09) 0px -3px 5px;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: ${(p) => p.theme.colors.white};\n  &:hover {\n    color: ${(p) => p.theme.colors.accent};\n  }\n`;\n\nexport const ImgWrap = styled(\"div\")`\n  width: 100%;\n  height: 300px;\n  overflow: hidden;\n`;\n\nexport const TextWraper = styled(\"div\")`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 0;\n  font-size: ${(p) => p.theme.fontSizes.m}px;\n  & p {\n    text-align: center;\n  }\n`;\n\nexport const Icon = styled(TbMovie)`\n  margin-right: 5px;\n`;\n","import { FC } from \"react\";\nimport { useLocation, generatePath } from \"react-router-dom\";\nimport routePaths from \"routeSettings\";\nimport { IMovie } from \"types\";\nimport defaultImg from \"images/default .jpg\";\nimport { Item, Icon, StyledLink, TextWraper, ImgWrap } from \"./ListItem.styled\";\n\nconst IMG_PATH = \"https://image.tmdb.org/t/p/w500\";\n\ninterface IListItemProps {\n  movie: IMovie;\n}\n\nconst ListItem: FC<IListItemProps> = ({ movie }) => {\n  const location = useLocation();\n\n  const movieLink = generatePath(routePaths.movie, {\n    movieId: movie.id,\n  } as any);\n\n  const imgPath =\n    movie.backdrop_path || movie.poster_path\n      ? IMG_PATH + (movie.poster_path ?? movie.backdrop_path)\n      : defaultImg;\n\n  return (\n    <Item>\n      <StyledLink\n        to={location.pathname === \"/\" ? movieLink : `${movie.id}`}\n        state={{ from: location }}\n      >\n        <ImgWrap>\n          <img src={imgPath} alt=\"img\" />\n        </ImgWrap>\n        <TextWraper>\n          <Icon />\n          <p>{movie.title || movie.original_name}</p>\n        </TextWraper>\n      </StyledLink>\n    </Item>\n  );\n};\n\nexport default ListItem;\n","import { List } from \"./MoviesList.styled\";\nimport { IMovie } from \"types\";\nimport ListItem from \"./ListItem\";\n\ninterface IProps {\n  moviesArr: IMovie[];\n}\n\nconst MoviesList: React.FC<IProps> = ({ moviesArr }) => {\n  return (\n    <List>\n      {moviesArr.map((movie) => {\n        return <ListItem key={movie.id} movie={movie} />;\n      })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\ninterface IProps {\n  readonly current?: boolean;\n  onClick?: any;\n  children: React.ReactNode;\n}\nexport const BtnContainer = styled(\"div\")`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: ${(p) => p.theme.space[4]}px;\n`;\n\nexport const StyledBtn = styled(\"button\")<IProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 25px;\n  height: 20px;\n  padding: ${(p) => p.theme.space[3]}px;\n  &:not(:last-child) {\n    margin-right: ${(p) => p.theme.space[1]}px;\n  }\n  font-size: 10px;\n  font-weight: ${(p) => p.theme.fontWeights.bold};\n  border: none;\n  border-radius: ${(p) => p.theme.radii.normal};\n  outline: none;\n  background: ${(p) =>\n    p.current ? p.theme.colors.active : p.theme.colors.background};\n  color: ${(p) => (p.current ? p.theme.colors.white : p.theme.colors.primary)};\n  ${(p) => {\n    if (!p.current) {\n      return css`\n        &:hover {\n          background: ${(p) => p.theme.colors.accent};\n          box-shadow: 0px 0px 4px 4px ${(p) => p.theme.colors.white};\n          font-size: ${(p) => p.theme.fontSizes.xs}px;\n        }\n      `;\n    }\n  }}\n\n  @media (min-width: 768px) {\n    width: 45px;\n    height: 35px;\n    margin-right: ${(p) => p.theme.space[2]}px;\n    font-size: ${(p) => p.theme.fontSizes.s}px;\n    ${(p) => {\n      if (!p.current) {\n        return css`\n          &:hover {\n            font-size: ${(p) => p.theme.fontSizes.m}px;\n          }\n        `;\n      }\n    }}\n  }\n`;\n","import { FC } from \"react\";\nimport { StyledBtn, BtnContainer } from \"./Pagination.styled\";\nimport { increment, decrement, setPage } from \"redux/moviesSlice\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\n\nconst Pagination: FC = () => {\n  const { page, totalPages } = useAppSelector((state) => state.page);\n  const dispatch = useAppDispatch();\n  const beforeTwoPage = page - 2;\n  const beforePage = page - 1;\n  const afterTwoPage = page + 2;\n  const afterPage = page + 1;\n\n  const onClick: React.MouseEventHandler<HTMLLabelElement> = (e) => {\n    if (!(e.target instanceof HTMLElement)) return;\n    const value = e.target.textContent;\n\n    if (value === \"next\") {\n      return dispatch(increment());\n    }\n    if (value === \"prev\") {\n      return dispatch(decrement());\n    }\n    dispatch(setPage(Number(value)));\n  };\n\n  return (\n    <BtnContainer>\n      {page > 1 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          prev\n        </StyledBtn>\n      )}\n      {page > 1 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          1\n        </StyledBtn>\n      )}\n      {page > 4 && <StyledBtn type=\"button\">...</StyledBtn>}\n      {page > 3 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {beforeTwoPage}\n        </StyledBtn>\n      )}\n      {page > 2 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {beforePage}\n        </StyledBtn>\n      )}\n      <StyledBtn type=\"button\" onClick={onClick} current>\n        {page}\n      </StyledBtn>\n      {page < totalPages - 1 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {afterPage}\n        </StyledBtn>\n      )}\n      {page < totalPages - 2 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {afterTwoPage}\n        </StyledBtn>\n      )}\n      {page < totalPages - 3 && <StyledBtn type=\"button\">...</StyledBtn>}\n      {page < totalPages && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {totalPages}\n        </StyledBtn>\n      )}\n      {page < totalPages && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          next\n        </StyledBtn>\n      )}\n    </BtnContainer>\n  );\n};\n\nexport default Pagination;\n","import styled from \"styled-components\";\nimport { Form, Field } from \"formik\";\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  position: absolute;\n  top: 70px;\n  left: 50%;\n  transform: translateX(-50%);\n  border: 1px solid ${(p) => p.theme.colors.primary};\n  @media (min-width: 768px) {\n    top: 28px;\n    left: 65%;\n  }\n\n  @media (min-width: 1200px) {\n    top: 28px;\n    left: 50%;\n  }\n`;\n\nconst StyledInput = styled(Field)`\n  width: 320px;\n  min-height: 25px;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding-left: ${(p) => p.theme.space[3]}px;\n  background: grey;\n  ::placeholder {\n    color: ${(p) => p.theme.colors.primary};\n  }\n`;\n\nconst Button = styled(\"button\")`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 25px;\n  height: 25px;\n  border: 0;\n  background: ${(p) => p.theme.colors.background};\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n    background: ${(p) => p.theme.colors.accent};\n  }\n`;\n\nexport { StyledForm, StyledInput, Button };\n","import { FC } from \"react\";\n// import { useSearchParams } from 'react-router-dom';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { BiSearch } from \"react-icons/bi\";\nimport { StyledForm, StyledInput, Button } from \"./SearchForm.styled\";\n\nconst validationSchema = Yup.object().shape({\n  search: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n});\n\ninterface IFormProps {\n  onSubmit: (name: string) => void;\n}\n\ninterface MyFormValues {\n  search: string;\n}\n\nconst SearchForm: FC<IFormProps> = ({ onSubmit }) => {\n  const initialValues: MyFormValues = { search: \"\" };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) => {\n          const { search } = values;\n          onSubmit(search);\n          actions.resetForm();\n        }}\n      >\n        <StyledForm>\n          <StyledInput type=\"text\" name=\"search\" placeholder=\"search name\" />\n          <Button type=\"submit\">\n            <BiSearch size={22} color=\"white\" />\n          </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState, FC } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport SearchForm from \"components/SearchForm\";\nimport MoviesList from \"components/MoviesList\";\nimport Pagination from \"components/Pagination\";\nimport { Container } from \"components/Container\";\nimport { LoadingLine } from \"components/Loader\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { setTotalPages, setPage } from \"redux/moviesSlice\";\nimport { useGetMoviesByNameQuery } from \"redux/moviesAPI\";\n\nconst MoviesPage: FC = () => {\n  const [urlSearchParams, setUrlSearchParams] = useSearchParams();\n  const name: string = urlSearchParams.get(\"search\") ?? \"\";\n  const [queryName, setQueryName] = useState<string>(name);\n  const dispatch = useAppDispatch();\n  const { page } = useAppSelector((state) => state.page);\n\n  const { data, isLoading, error } = useGetMoviesByNameQuery(\n    {\n      query: queryName,\n      page,\n    },\n    {\n      skip: queryName === \"\",\n    }\n  );\n  useEffect(() => {\n    if (data) {\n      dispatch(setTotalPages(data.total_pages));\n    }\n  }, [data, dispatch]);\n\n  if (error) {\n    toast(\"The resource you requested could not be found.\");\n  }\n\n  const onSubmitForm = (name: string) => {\n    setQueryName(name);\n    setUrlSearchParams(name !== \"\" ? { search: name } : {});\n    dispatch(setPage(1));\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={onSubmitForm} />\n      {isLoading && <LoadingLine />}\n      {data && <MoviesList moviesArr={data.results} />}\n      {data && data.results.length > 0 && <Pagination />}\n    </Container>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["List","styled","Item","p","theme","space","radii","normal","colors","background","StyledLink","NavLink","white","accent","ImgWrap","TextWraper","fontSizes","m","Icon","TbMovie","movie","location","useLocation","movieLink","generatePath","routePaths","movieId","id","imgPath","backdrop_path","poster_path","defaultImg","to","pathname","state","from","src","alt","title","original_name","moviesArr","map","BtnContainer","StyledBtn","fontWeights","bold","current","active","primary","css","xs","s","useAppSelector","page","totalPages","dispatch","useAppDispatch","beforeTwoPage","beforePage","afterTwoPage","afterPage","onClick","e","target","HTMLElement","value","textContent","increment","decrement","setPage","Number","type","StyledForm","Form","StyledInput","Field","Button","validationSchema","Yup","shape","search","min","max","required","onSubmit","initialValues","values","actions","resetForm","name","placeholder","size","color","useSearchParams","urlSearchParams","setUrlSearchParams","get","useState","queryName","setQueryName","useGetMoviesByNameQuery","query","skip","data","isLoading","error","useEffect","setTotalPages","total_pages","toast","Container","MoviesList","results","length","Pagination"],"sourceRoot":""}