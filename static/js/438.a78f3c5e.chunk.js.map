{"version":3,"file":"static/js/438.a78f3c5e.chunk.js","mappings":"gSAEMA,GAAcC,EAAAA,EAAAA,IAAO,KAAPA,CAAH,oMAGF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IAED,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IAMVC,GAAcN,EAAAA,EAAAA,IAAO,IAAPA,CAAH,2GAIN,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,MAAnB,I,SCTG,SAASC,IACtB,IAAMC,GAAkBC,EAAAA,EAAAA,MACxB,GAA6BC,EAAAA,EAAAA,UAAyB,MAAtD,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACR,uBAAC,mHAE4BC,EAAAA,EAAAA,IAAkBN,GAF9C,OAESO,EAFT,OAGGH,EAAUG,GAHb,gDAKGC,EAAAA,GAAAA,MAAY,KAAMC,SALrB,wDAAD,EAQD,GAAE,CAACT,IAEAG,GACFO,EAAAA,GAAAA,WAAyB,MAIzB,8BACGP,IACEA,EAAQQ,QAAQC,OAAS,GACxB,SAACvB,EAAD,UACGc,EAAQQ,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACnB,2BACE,qCAAaD,MACb,6BAAKC,OAFEF,EADU,OAQvB,SAAClB,EAAD,2BAIT,C,mMC3CDqB,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAKHC,EAAa,yCAAG,WAAOC,GAAP,8FACJH,IAAAA,IACrB,oBACE,IAAII,gBAAgB,CAClBH,QAAAA,EACAE,KAAAA,KALqB,cACrBE,EADqB,OASrBC,EAAOD,EAASC,KATK,kBAUpB,CACLZ,QAASY,EAAKZ,QACdS,KAAMG,EAAKH,KACXI,WAAYD,EAAKE,cAbQ,2CAAH,sDAiBbC,EAAW,yCAAG,WAAOC,GAAP,mGAAsBP,EAAtB,+BAAqC,EAArC,SACFH,IAAAA,IACrB,gBACE,IAAII,gBAAgB,CAClBH,QAAAA,EACAS,MAAAA,EACAC,SAAU,QACVR,KAAMA,EACNS,eAAe,KARI,cACnBP,EADmB,OAYnBC,EAAOD,EAASC,KAZG,kBAalB,CACLZ,QAASY,EAAKZ,QACdS,KAAMG,EAAKH,KACXI,WAAYD,EAAKE,cAhBM,2CAAH,sDAoBXK,EAAc,yCAAG,WAAOhB,GAAP,8FACLG,IAAAA,IACrB,gBAASH,EAAT,KACE,IAAIO,gBAAgB,CAClBH,QAAAA,EACAU,SAAU,WALY,cACtBN,EADsB,OAStBC,EAAOD,EAASC,KATM,kBAUrBA,GAVqB,2CAAH,sDAadQ,EAAc,yCAAG,WAAOjB,GAAP,8FACLG,IAAAA,IACrB,gBAASH,EAAT,aACE,IAAIO,gBAAgB,CAClBH,QAAAA,EACAU,SAAU,WALY,cACtBN,EADsB,OAStBC,EAAOD,EAASC,KATM,kBAUrBA,GAVqB,2CAAH,sDAadjB,EAAiB,yCAAG,WAAOQ,GAAP,8FACRG,IAAAA,IACrB,gBAASH,EAAT,aACE,IAAIO,gBAAgB,CAClBH,QAAAA,EACAU,SAAU,QACVR,KAAM,KANmB,cACzBE,EADyB,OAUzBC,EAAOD,EAASC,KAVS,kBAWxBA,GAXwB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.ts","components/Reviews/Reviews.tsx","serverAPI/ServerAPI.ts"],"sourcesContent":["import styled from 'styled-components';\n\nconst ReviewdList = styled('ul')`\n  list-style: none;\n  padding: 0px 20px 20px;\n  font-size: ${p => p.theme.fontSizes.m}px;\n  & li {\n    padding: ${p => p.theme.space[2]}px;\n  }\n  & li:nth-child(odd) {\n    background: rgb(222, 208, 172);\n  }\n`;\nconst ReviewdText = styled('p')`\n  font-size: 34px;\n  text-align: center;\n  padding-bottom: 20px;\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport { ReviewdList, ReviewdText };\n","import { useState, useEffect } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport { animateScroll } from 'react-scroll';\nimport { toast } from 'react-toastify';\nimport { fetchMovieReviews } from 'serverAPI';\nimport { ReviewdList, ReviewdText } from './Reviews.styled';\nimport { IReview } from 'types/review';\n\nexport default function Reviews() {\n  const movieId: string = useOutletContext();\n  const [reviews, setReview] = useState<IReview | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const reviewData = await fetchMovieReviews(movieId);\n        setReview(reviewData);\n      } catch (error: any) {\n        toast.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  if (reviews) {\n    animateScroll.scrollMore(250);\n  }\n\n  return (\n    <>\n      {reviews &&\n        (reviews.results.length > 0 ? (\n          <ReviewdList>\n            {reviews.results.map(({ id, author, content }) => (\n              <li key={id}>\n                <h2>Author: {author}</h2>\n                <p> {content}</p>\n              </li>\n            ))}\n          </ReviewdList>\n        ) : (\n          <ReviewdText>No rewiews</ReviewdText>\n        ))}\n    </>\n  );\n}\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nconst api_key = \"9c009c00402fb866baf05bd346a2d01d\";\ninterface IParams {\n  [x: string]: any;\n};\n\nexport const fetchTrending = async (page: number) => {\n  const response = await axios.get(\n    \"trending/all/day?\" +\n      new URLSearchParams({\n        api_key,\n        page,\n      } as IParams)\n  );\n\n  const data = response.data;\n  return {\n    results: data.results,\n    page: data.page,\n    totalPages: data.total_pages,\n  };\n};\n\nexport const searchMovie = async (query: string, page: number = 1) => {\n  const response = await axios.get(\n    `search/movie?` +\n      new URLSearchParams({\n        api_key,\n        query,\n        language: \"en-US\",\n        page: page,\n        include_adult: false,\n      } as IParams)\n  );\n\n  const data = response.data;\n  return {\n    results: data.results,\n    page: data.page,\n    totalPages: data.total_pages,\n  };\n};\n\nexport const fetchMovieById = async (id: any) => {\n  const response = await axios.get(\n    `movie/${id}?` +\n      new URLSearchParams({\n        api_key,\n        language: \"en-US\",\n      } as IParams)\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieCast = async (id: string) => {\n  const response = await axios.get(\n    `movie/${id}/credits?` +\n      new URLSearchParams({\n        api_key,\n        language: \"en-US\",\n      } as IParams)\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieReviews = async (id: string) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?` +\n      new URLSearchParams({\n        api_key,\n        language: \"en-US\",\n        page: 1,\n      } as IParams)\n  );\n\n  const data = response.data;\n  return data;\n};\n\n"],"names":["ReviewdList","styled","p","theme","fontSizes","m","space","ReviewdText","colors","accent","Reviews","movieId","useOutletContext","useState","reviews","setReview","useEffect","fetchMovieReviews","reviewData","toast","message","animateScroll","results","length","map","id","author","content","axios","api_key","fetchTrending","page","URLSearchParams","response","data","totalPages","total_pages","searchMovie","query","language","include_adult","fetchMovieById","fetchMovieCast"],"sourceRoot":""}