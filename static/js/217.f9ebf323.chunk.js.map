{"version":3,"file":"static/js/217.f9ebf323.chunk.js","mappings":"6OAEaA,GAAUC,E,QAAAA,IAAO,KAAPA,CAAH,+mBAoBL,SAACC,GAAD,OAAOA,EAAEC,MAAMC,MAAM,EAArB,IACE,SAACF,GAAD,OAAOA,EAAEC,MAAME,UAAUC,CAAzB,IAGJ,qBAAGH,MAAkBI,OAAOC,KAA5B,IACK,qBAAGL,MAAkBI,OAAOE,UAA5B,I,uCChBH,SAASC,IACtB,IAAMC,GAAkBC,EAAAA,EAAAA,MACxB,GAAyCC,EAAAA,EAAAA,IAAqBF,GAAhDG,EAAd,EAAQC,KAAYC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,MAU/B,OARIH,GACFI,EAAAA,GAAAA,WAAyB,KAGvBD,IACFE,EAAAA,EAAAA,IAAM,mDAIN,UAACC,EAAA,EAAD,WACGJ,IAAa,SAAC,KAAD,IACbF,IACC,SAACd,EAAD,UACGc,EAAKO,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAClCC,EAAUF,EApBX,kCAqBUA,EACXG,EACJ,OACE,2BACE,gBAAKC,IAAKF,EAASG,IAAKN,EAAMO,MAAM,MAAMC,OAAO,SACjD,uBAAIR,KACJ,uCAAeE,OAHRH,EAMZ,QAKV,C","sources":["components/Cast/Cast.styled.ts","components/Cast/Cast.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CasList = styled(\"ul\")`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 10px;\n  grid-row-gap: 20px;\n  padding: 0px 0px 20px 0px;\n  list-style: none;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(7, 1fr);\n  }\n  & li {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: ${(p) => p.theme.space[2]}px;\n    font-size: ${(p) => p.theme.fontSizes.s}px;\n    text-align: center;\n    border-radius: 10px;\n    color: ${({ theme }) => theme.colors.white};\n    background: ${({ theme }) => theme.colors.background};\n    & img {\n    }\n  }\n`;\n","import { useOutletContext } from \"react-router-dom\";\nimport { animateScroll } from \"react-scroll\";\nimport { toast } from \"react-toastify\";\nimport defaultPhoto from \"images/default.jpeg\";\nimport { CasList } from \"./Cast.styled\";\nimport { Container } from \"components/Container\";\nimport { LoadingLine } from \"components/Loader\";\nimport { useGetMovieCastQuery } from \"redux/moviesAPI\";\n\nconst IMG_PATH = \"https://image.tmdb.org/t/p/w500\";\n\nexport default function Cast() {\n  const movieId: string = useOutletContext();\n  const { data: cast, isLoading, error } = useGetMovieCastQuery(movieId);\n\n  if (cast) {\n    animateScroll.scrollMore(250);\n  }\n\n  if (error) {\n    toast(\"The resource you requested could not be found.\");\n  }\n\n  return (\n    <Container>\n      {isLoading && <LoadingLine />}\n      {cast && (\n        <CasList>\n          {cast.map(({ cast_id, name, profile_path, character }) => {\n            const imgPath = profile_path\n              ? IMG_PATH + profile_path\n              : defaultPhoto;\n            return (\n              <li key={cast_id}>\n                <img src={imgPath} alt={name} width=\"105\" height=\"140\" />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </CasList>\n      )}\n    </Container>\n  );\n}\n"],"names":["CasList","styled","p","theme","space","fontSizes","s","colors","white","background","Cast","movieId","useOutletContext","useGetMovieCastQuery","cast","data","isLoading","error","animateScroll","toast","Container","map","cast_id","name","profile_path","character","imgPath","defaultPhoto","src","alt","width","height"],"sourceRoot":""}