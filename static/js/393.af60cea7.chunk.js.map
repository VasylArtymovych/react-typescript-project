{"version":3,"file":"static/js/393.af60cea7.chunk.js","mappings":"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","sources":["serverAPI/ServerAPI.ts","components/Title/Title.ts","components/MoviesList/MoviesList.styled.ts","components/MoviesList/MoviesList.tsx","pages/HomePage/HomePage.styled.ts","components/Pagination/Pagination.styled.ts","components/Pagination/Pagination.tsx","hooks/usePagination.ts","pages/HomePage/HomePage.tsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nconst api_key = \"9c009c00402fb866baf05bd346a2d01d\";\ninterface IParams {\n  [x: string]: any;\n};\n\nexport const fetchTrending = async (page: number) => {\n  const response = await axios.get(\n    \"trending/all/day?\" +\n      new URLSearchParams({\n        api_key,\n        page,\n      } as IParams)\n  );\n\n  const data = response.data;\n  return {\n    results: data.results,\n    page: data.page,\n    totalPages: data.total_pages,\n  };\n};\n\nexport const searchMovie = async (query: string, page: number = 1) => {\n  const response = await axios.get(\n    `search/movie?` +\n      new URLSearchParams({\n        api_key,\n        query,\n        language: \"en-US\",\n        page: page,\n        include_adult: false,\n      } as IParams)\n  );\n\n  const data = response.data;\n  return {\n    results: data.results,\n    page: data.page,\n    totalPages: data.total_pages,\n  };\n};\n\nexport const fetchMovieById = async (id: any) => {\n  const response = await axios.get(\n    `movie/${id}?` +\n      new URLSearchParams({\n        api_key,\n        language: \"en-US\",\n      } as IParams)\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieCast = async (id: string) => {\n  const response = await axios.get(\n    `movie/${id}/credits?` +\n      new URLSearchParams({\n        api_key,\n        language: \"en-US\",\n      } as IParams)\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieReviews = async (id: string) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?` +\n      new URLSearchParams({\n        api_key,\n        language: \"en-US\",\n        page: 1,\n      } as IParams)\n  );\n\n  const data = response.data;\n  return data;\n};\n\n","import styled from 'styled-components';\n\nconst Title = styled('h2')`\n  margin-bottom: 15px;\n  border-radius: 8px;\n  color: ${({ theme }) => theme.colors.white};\n  font-size: ${({ theme }) => theme.fontSizes.l}px;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  text-align: center;\n  text-shadow: 0 2px 4px orange;\n\n  /* background-image: repeating-linear-gradient(\n    -45deg,\n    rgb(47, 44, 185),\n    rgb(16, 15, 60) 15px,\n    rgb(21, 138, 159) 15px,\n    rgb(21, 138, 159) 30px\n  ); */\n`;\n\nexport default Title;\n","import styled from 'styled-components';\nimport { TbMovie } from 'react-icons/tb';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled('ul')`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: minmax(300px, auto);\n  grid-gap: 20px;\n  list-style: none;\n\n  & li {\n    padding: ${p => p.theme.space[2]}px;\n    border-radius: ${({ theme }) => theme.radii.normal};\n    background: #fff;\n    box-shadow: rgba(255, 111, 80, 0.25) 0px 54px 55px,\n      rgba(255, 111, 80, 0.12) 0px -12px 30px,\n      rgba(255, 111, 80, 0.12) 0px 4px 6px,\n      rgba(255, 111, 80, 0.17) 0px 12px 13px,\n      rgba(255, 111, 80, 0.09) 0px -3px 5px;\n  }\n\n  & li:hover {\n    transform: scale(1.05);\n  }\n\n  & li a {\n    text-decoration: none;\n    color: ${p => p.theme.colors.text};\n  }\n`;\n\nexport const TextWraper = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 0;\n  font-size: ${p => p.theme.fontSizes.m}px;\n  & p {\n    text-align: center;\n  }\n`;\n\nexport const Icon = styled(TbMovie)`\n  margin-right: 5px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  &:hover:not(.active) {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\n// export const List = styled('ul')`\n//   list-style: none;\n//   list-style-position: inside;\n//   font-size: ${p => p.theme.fontSizes.m}px;\n//   & li {\n//     display: flex;\n//     align-items: center;\n//     padding: ${p => p.theme.space[2]}px;\n//   }\n//   & li:nth-child(odd) {\n//     background: rgb(222, 208, 172);\n//   }\n\n//   & li a {\n//     display: flex;\n//     align-items: center;\n//     color: ${p => p.theme.colors.text};\n//   }\n\n//   & li img {\n//     display: block;\n//     margin-right: 10px;\n//   }\n// `;\n\n// export const Icon = styled(TbMovie)`\n//   margin-right: 5px;\n// `;\n\n// export const StyledLink = styled(NavLink)`\n//   &:hover:not(.active) {\n//     color: ${p => p.theme.colors.accent};\n//   }\n// `;\n","import { useLocation, generatePath } from 'react-router-dom';\nimport routePaths from 'routeSettings';\nimport { List, Icon, StyledLink, TextWraper } from './MoviesList.styled';\nimport { IMovie } from 'types';\nimport defaultImg from 'images/default .jpg';\nconst IMG_PATH = 'https://image.tmdb.org/t/p/w500';\n\ninterface IProps {\n  moviesArr: IMovie[];\n}\n\nconst MoviesList: React.FC<IProps> = ({ moviesArr }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {moviesArr.map(\n        ({ id, title, original_name, backdrop_path, poster_path }) => {\n          const movieLink = generatePath(routePaths.movie, {\n            movieId: id,\n          } as any);\n          const imgPath =\n            backdrop_path || poster_path\n              ? IMG_PATH + (poster_path ?? backdrop_path)\n              : defaultImg;\n          return (\n            <li key={id}>\n              <StyledLink\n                to={location.pathname === '/' ? movieLink : `${id}`}\n                state={{ from: location }}\n              >\n                <img src={imgPath} alt=\"img\" />\n                <TextWraper>\n                  <Icon />\n                  <p>{title || original_name}</p>\n                </TextWraper>\n              </StyledLink>\n            </li>\n          );\n        }\n      )}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Container = styled('div')`\n  width: 100%;\n  padding: ${({ theme }) => theme.space[5]}px;\n  padding-top: 0;\n  margin: 0 auto;\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface IProps {\n  readonly current?: boolean;\n  onClick?: any;\n  children: React.ReactNode;\n}\nexport const BtnContainer = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: ${p => p.theme.space[4]}px;\n`;\n\nexport const StyledBtn = styled('button')<IProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 25px;\n  height: 20px;\n  padding: ${p => p.theme.space[3]}px;\n  &:not(:last-child) {\n    margin-right: ${p => p.theme.space[1]}px;\n  }\n  font-size: 10px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n  background: ${p =>\n    p.current ? p.theme.colors.active : p.theme.colors.white};\n  color: ${p => (p.current ? p.theme.colors.white : p.theme.colors.text)};\n  ${p => {\n    if (!p.current) {\n      return css`\n        &:hover {\n          background: ${p => p.theme.colors.accent};\n          box-shadow: 0px 0px 4px 4px ${p => p.theme.colors.white};\n          font-size: ${p => p.theme.fontSizes.xs}px;\n        }\n      `;\n    }\n  }}\n\n  @media (min-width: 768px) {\n    width: 45px;\n    height: 35px;\n    margin-right: ${p => p.theme.space[2]}px;\n    font-size: ${p => p.theme.fontSizes.s}px;\n    ${p => {\n      if (!p.current) {\n        return css`\n          &:hover {\n            font-size: ${p => p.theme.fontSizes.m}px;\n          }\n        `;\n      }\n    }}\n  }\n`;\n","import { FC, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { StyledBtn, BtnContainer } from './Pagination.styled';\n\ninterface IProps {\n  page: number;\n  totalPages: number;\n  onClick: React.MouseEventHandler<HTMLLabelElement>;\n}\n\nconst Pagination: FC<IProps> = ({ page, totalPages, onClick }) => {\n  const beforeTwoPage = page - 2;\n  const beforePage = page - 1;\n  const afterTwoPage = page + 2;\n  const afterPage = page + 1;\n\n  const [urlSearchParams, setUrlSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const pageToString = page.toString();\n    setUrlSearchParams({ ...urlSearchParams, page: pageToString });\n  }, [page, setUrlSearchParams, urlSearchParams]);\n\n  return (\n    <BtnContainer>\n      {page > 1 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          prev\n        </StyledBtn>\n      )}\n      {page > 1 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          1\n        </StyledBtn>\n      )}\n      {page > 4 && <StyledBtn type=\"button\">...</StyledBtn>}\n      {page > 3 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {beforeTwoPage}\n        </StyledBtn>\n      )}\n      {page > 2 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {beforePage}\n        </StyledBtn>\n      )}\n      <StyledBtn type=\"button\" onClick={onClick} current>\n        {page}\n      </StyledBtn>\n      {page < totalPages - 1 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {afterPage}\n        </StyledBtn>\n      )}\n      {page < totalPages - 2 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {afterTwoPage}\n        </StyledBtn>\n      )}\n      {page < totalPages - 3 && <StyledBtn type=\"button\">...</StyledBtn>}\n      {page < totalPages && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {totalPages}\n        </StyledBtn>\n      )}\n      {page < totalPages && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          next\n        </StyledBtn>\n      )}\n    </BtnContainer>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\n\nconst usePagination = (page = 1, total = 1) => {\n  const [currentPage, setCurrentPage] = useState<number>(page);\n  const [totalPages, setTotalPages] = useState<number>(total);\n\n  const onBtnClick: React.MouseEventHandler<HTMLLabelElement> = e => {\n    if (!(e.target instanceof HTMLElement)) return;\n    const value = e.target.textContent;\n\n    if (value === 'next') {\n      return setCurrentPage(state => state + 1);\n    }\n    if (value === 'prev') {\n      return setCurrentPage(state => state - 1);\n    }\n    setCurrentPage(Number(value));\n  };\n\n  return { currentPage, totalPages, setTotalPages, onBtnClick };\n};\n\nexport default usePagination;\n","import React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { fetchTrending } from \"serverAPI\";\nimport Title from \"components/Title\";\nimport MoviesList from \"components/MoviesList\";\nimport { Container } from \"./HomePage.styled\";\nimport Pagination from \"components/Pagination\";\nimport usePagination from \"hooks/usePagination\";\n\nconst HomePage: React.FC = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const page = Number(searchParams.get(\"page\"));\n\n  const { currentPage, totalPages, setTotalPages, onBtnClick } = usePagination(\n    page ? page : 1\n  );\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const { results, totalPages } = await fetchTrending(currentPage);\n        setMovies(results);\n        setTotalPages(totalPages);\n      } catch (error: any) {\n        toast.error(error.message);\n      }\n    }\n    fetchMovies();\n  }, [setTotalPages, currentPage]);\n\n  return (\n    <Container>\n      <Title>Trending Today</Title>\n      <MoviesList moviesArr={movies} />\n      {movies.length > 1 && (\n        <Pagination\n          page={currentPage}\n          totalPages={totalPages}\n          onClick={onBtnClick}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"names":["axios","api_key","fetchTrending","page","URLSearchParams","response","data","results","totalPages","total_pages","styled","theme","colors","white","fontSizes","l","fontWeights","bold","List","p","space","radii","normal","text","TextWraper","m","Icon","TbMovie","StyledLink","NavLink","accent","moviesArr","location","useLocation","map","id","title","original_name","backdrop_path","poster_path","movieLink","generatePath","routePaths","movieId","imgPath","defaultImg","to","pathname","state","from","src","alt","Container","BtnContainer","StyledBtn","current","active","css","xs","s","onClick","beforeTwoPage","beforePage","afterTwoPage","afterPage","useSearchParams","urlSearchParams","setUrlSearchParams","useEffect","pageToString","toString","type","total","useState","currentPage","setCurrentPage","setTotalPages","onBtnClick","e","target","HTMLElement","value","textContent","Number","movies","setMovies","searchParams","get","usePagination","toast","message","fetchMovies","length"],"sourceRoot":""}