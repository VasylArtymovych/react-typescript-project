{"version":3,"file":"static/js/43.a7a9b7a3.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.ts","components/MovieCard/MovieCard.tsx","pages/MovieDetailsPage/MovieDetailsPage.styled.ts","pages/MovieDetailsPage/MovieDetailsPage.tsx","serverAPI/ServerAPI.ts"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled(\"div\")`\n  width: 100%;\n  padding: ${({ theme }) => theme.space[5]}px;\n  margin: 0 auto;\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n\nconst InfoContainer = styled(\"div\")`\n  display: flex;\n  gap: 20px;\n`;\n\nconst ImgWraper = styled(\"div\")`\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n  width: 20%;\n  & img {\n    display: block;\n    width: 100%;\n    object-fit: fill;\n  }\n`;\n\nconst TextWraper = styled(\"div\")`\n  width: 100%;\n  @media (min-width: 768px) {\n    width: 50%;\n  }\n`;\n\nconst MovieTitle = styled(\"h2\")`\n  margin-bottom: 20px;\n  font-size: ${({ theme }) => theme.fontSizes.l}px;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  text-shadow: 0 2px 4px ${({ theme }) => theme.colors.primary};\n`;\n\nconst StyledText = styled(\"p\")`\n  margin-bottom: 7px;\n  @media (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nconst StyledSpan = styled(\"span\")`\n  color: rgb(16, 15, 60);\n  font-weight: ${(p) => p.theme.fontWeights.bold};\n`;\n\nconst List = styled(\"ul\")`\n  list-style: none;\n  display: flex;\n  margin-bottom: 10px;\n  li {\n    margin-right: 5px;\n    font-size: 14px;\n    color: ${(p) => p.theme.colors.accent};\n  }\n`;\n\nconst GoBackBtn = styled(\"button\")`\n  width: 65px;\n  height: 30px;\n  padding: ${(p) => p.theme.space[3]}px;\n  margin-bottom: ${(p) => p.theme.space[4]}px;\n  font-size: 12px;\n  font-weight: ${(p) => p.theme.fontWeights.bold};\n  border: none;\n  outline: none;\n  border-radius: ${(p) => p.theme.radii.normal};\n  color: ${(p) => p.theme.colors.primary};\n  background: ${(p) => p.theme.colors.background};\n  &:hover {\n    background: ${(p) => p.theme.colors.reverseBackground};\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n      ${(p) => p.theme.colors.primary} 0px -12px 30px,\n      ${(p) => p.theme.colors.primary} 0px 4px 6px,\n      ${(p) => p.theme.colors.primary} 0px 12px 13px,\n      ${(p) => p.theme.colors.primary} 0px -3px 5px;\n  }\n`;\n\nexport {\n  Container,\n  InfoContainer,\n  ImgWraper,\n  TextWraper,\n  MovieTitle,\n  StyledText,\n  StyledSpan,\n  List,\n  GoBackBtn,\n};\n","import { FC } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport {\n  Container,\n  InfoContainer,\n  ImgWraper,\n  TextWraper,\n  MovieTitle,\n  StyledText,\n  StyledSpan,\n  List,\n  GoBackBtn,\n} from \"./MovieCard.styled\";\nimport defaultImg from \"images/default.jpeg\";\nimport { IMovie } from \"types\";\nconst IMG_PATH = \"https://image.tmdb.org/t/p/w500\";\n\ninterface IMovieCardProps {\n  movie: IMovie;\n}\n\n// interface IState {\n//   from: { pathname: string };\n// }\n\n// interface ILocation {\n//   state: IState;\n// }\n\nconst MovieCard: FC<IMovieCardProps> = ({ movie }) => {\n  const { backdrop_path, poster_path, title, overview, genres, vote_average } =\n    movie;\n  const navigate = useNavigate();\n  const location: any = useLocation();\n\n  const imgPath =\n    backdrop_path || poster_path\n      ? IMG_PATH + (poster_path ?? backdrop_path)\n      : defaultImg;\n\n  return (\n    <Container>\n      <GoBackBtn\n        type=\"button\"\n        onClick={() => {\n          // navigate(-1);\n          navigate(location?.state?.from ?? \"/movies\");\n        }}\n      >\n        Go back\n      </GoBackBtn>\n      <InfoContainer>\n        <ImgWraper>\n          <img src={imgPath} alt={title} />\n        </ImgWraper>\n        <TextWraper>\n          <MovieTitle>{title}</MovieTitle>\n          <StyledText>\n            <StyledSpan>User score:</StyledSpan> {Math.round(vote_average * 10)}\n            %\n          </StyledText>\n          <StyledText>\n            <StyledSpan>Overview:</StyledSpan> {overview}\n          </StyledText>\n          <StyledSpan>genres:</StyledSpan>\n          <List>\n            {genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </List>\n        </TextWraper>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled('div')`\n  width: 100%;\n  padding: ${({ theme }) => theme.space[5]}px;\n  padding-top: 0;\n  margin: 0 auto;\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n\nexport const Title = styled('h3')`\n  padding: 5px 10px;\n  margin-top: 0;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.fontSizes.m}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  background: linear-gradient(to top left, rgb(16, 15, 60), rgb(85, 204, 225));\n  border-bottom: 1px solid ${p => p.theme.colors.accent};\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: block;\n  margin: 5px 20px;\n  color: ${p => p.color || p.theme.colors.white};\n\n  &.active {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { fetchMovieById } from 'serverAPI';\nimport { LoaderOval } from 'components/Loader';\nimport { Title, StyledLink, Container } from './MovieDetailsPage.styled';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setMovie(movieData);\n      } catch (error: any) {\n        toast.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie ? (\n      <div>\n        <Container>\n          <MovieCard movie={movie} />\n\n          <Title>Additional information</Title>\n          <div>\n            <StyledLink to=\"cast\" state={{ from: location }}>\n              Cast\n            </StyledLink>\n            <StyledLink to=\"reviews\" state={{ from: location }}>\n              Reviews\n            </StyledLink>\n          </div>\n        </Container>\n      </div>\n      ) : (\n        <LoaderOval />\n      )}\n\n      <Suspense fallback={<LoaderOval />}>\n        <Outlet context={movieId} />\n      </Suspense>\n    </>\n  );\n}\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nconst api_key = \"9c009c00402fb866baf05bd346a2d01d\";\ninterface IParams {\n  [x: string]: any;\n};\n\nexport const fetchTrending = async (page: number) => {\n  const response = await axios.get(\n    \"trending/all/day?\" +\n      new URLSearchParams({\n        api_key,\n        page,\n      } as IParams)\n  );\n\n  const data = response.data;\n  return {\n    results: data.results,\n    page: data.page,\n    totalPages: data.total_pages,\n  };\n};\n\nexport const searchMovie = async (query: string, page: number = 1) => {\n  const response = await axios.get(\n    `search/movie?` +\n      new URLSearchParams({\n        api_key,\n        query,\n        language: \"en-US\",\n        page: page,\n        include_adult: false,\n      } as IParams)\n  );\n\n  const data = response.data;\n  return {\n    results: data.results,\n    page: data.page,\n    totalPages: data.total_pages,\n  };\n};\n\nexport const fetchMovieById = async (id: any) => {\n  const response = await axios.get(\n    `movie/${id}?` +\n      new URLSearchParams({\n        api_key,\n        language: \"en-US\",\n      } as IParams)\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieCast = async (id: string) => {\n  const response = await axios.get(\n    `movie/${id}/credits?` +\n      new URLSearchParams({\n        api_key,\n        language: \"en-US\",\n      } as IParams)\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieReviews = async (id: string) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?` +\n      new URLSearchParams({\n        api_key,\n        language: \"en-US\",\n        page: 1,\n      } as IParams)\n  );\n\n  const data = response.data;\n  return data;\n};\n\n"],"names":["Container","styled","theme","space","InfoContainer","ImgWraper","TextWraper","MovieTitle","fontSizes","l","fontWeights","bold","colors","secondary","primary","StyledText","StyledSpan","p","List","accent","GoBackBtn","radii","normal","background","reverseBackground","movie","backdrop_path","poster_path","title","overview","genres","vote_average","navigate","useNavigate","location","useLocation","imgPath","defaultImg","type","onClick","state","from","src","alt","Math","round","map","id","name","Title","white","m","StyledLink","NavLink","color","MovieDetailsPage","useState","setMovie","movieId","useParams","useEffect","fetchMovieById","movieData","toast","message","to","Loader","Suspense","fallback","context","axios","api_key","fetchTrending","page","URLSearchParams","response","data","results","totalPages","total_pages","searchMovie","query","language","include_adult","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}